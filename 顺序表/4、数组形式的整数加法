989.数组形式的整数加法

https://leetcode.cn/problems/add-to-array-form-of-integer/description/

【问题描述】
整数的 数组形式  num 是按照从左到右的顺序表示其数字的数组。

例如，对于 num = 1321 ，数组形式是 [1,3,2,1] 。
给定 num ，整数的 数组形式 ，和整数 k ，返回 整数 num + k 的 数组形式 。

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* addToArrayForm(int* num, int numSize, int k, int* returnSize) {
    int k_num = k;
    int k_Size = 0; // 求k的位数
    while (k_num) {
        k_Size++;
        k_num /= 10;
    }
    int len = k_Size > numSize ? k_Size : numSize; // 获取较大数的位数
    int* arr = (int*)malloc(sizeof(int) * (len + 1)); // 创建新数组

    int ni = numSize - 1; // numSize[ni]
    int i = 0;            // arr[i]
    int carry = 0;        // 进位
    while (len--) {       // 如果num位数较小
        int replace = 0;
        if (ni >= 0) {
            replace = num[ni];
            ni--; // 取数组num的前一位
        }
        int result = replace + k % 10 + carry; // 从最后一位开始计算 + 前一位的进位

        k /= 10;          // k取更高的一位
        if (result > 9) { // 如果有进位
            result -= 10;
            carry = 1;
        } 
        else
        {
            carry = 0;
        }
        arr[i++] = result; //  赋值到新数组中
    }
    if (carry == 1) {   // 最后有进位1
        arr[i++] = 1;
    }
    int first = 0, last = i - 1; // 倒置
    while (first < last) {
        int temp = arr[first];
        arr[first] = arr[last];
        arr[last] = temp;
        first++;
        last--;
    }

    *returnSize = i;
    return arr;
}
