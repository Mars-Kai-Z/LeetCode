88.合并两个有序数组

https://leetcode.cn/problems/merge-sorted-array/

【问题描述】
给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。

请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。

注意：最终，合并后数组不应由函数返回，而是存储在数组 nums1 中。
为了应对这种情况，nums1 的初始长度为 m + n，其中前 m 个元素表示应合并的元素，后 n 个元素为 0 ，应忽略。
nums2 的长度为 n 。

void merge(int* nums1, int nums1Size, int m, int* nums2, int nums2Size, int n) {
    // 两个都空，直接结束；不需要考虑实现
    while (m && n) { // 两个数组都不空；因为两个都是有序数组，从后往前考虑
        if (nums1[m - 1] < nums2[n - 1]) { // nums1 小于nums2
            nums1[m + n - 1] = nums2[n - 1];
            n--;
        } else {
            nums1[m + n - 1] = nums1[m - 1];
            m--;
        }
    }
    // n为0直接结束，m为0，n不为0时；
    if (!m && n) { // nums1空，nums2不空
        for (int pos = 0; pos < n; pos++) {
            nums1[pos] = nums2[pos];
        }
    }
}
