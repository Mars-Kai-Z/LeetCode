26、删除有序数组中的重复项
【题目描述】
给你一个 非严格递增排列 的数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新长度。
元素的 相对顺序 应该保持 一致 。然后返回 nums 中唯一元素的个数。

考虑 nums 的唯一元素的数量为 k ，你需要做以下事情确保你的题解可以被通过：

1）更改数组 nums ，使 nums 的前 k 个元素包含唯一元素，并按照它们最初在 nums 中出现的顺序排列。
   nums 的其余元素与 nums 的大小不重要。
2）返回 k 。

int removeDuplicates(int* nums, int numsSize) {
    int j = 0;                                  // 类似于第二个指针
    for (int i = 1; i < numsSize; i++) {
        if (nums[j] < nums[i]) {                // nums[0]小于nums[1]
            nums[++j] = nums[i];                // 把nums[1]的值赋值给nums[j+1];    // j往后移动一位
        }
    }
    return j+1;                                 // 加上nums[0]
}
